% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/0_2_6_msmt_nearest.R
\name{msmt_nearest}
\alias{msmt_nearest}
\title{Select nearest locations from a distance matrix
This function takes as input a distance matrix and returns list of either the nearest n locations, or locations within a given distance.}
\usage{
msmt_nearest(dmat, dist = NULL, count = NULL, format = "list")
}
\arguments{
\item{dmat}{A matrix containing distances, with location identifiers included as column and and row names}

\item{dist}{A single number, indicating maximum distance, in which locations are to be included}

\item{count}{A single integer, indicating the number of k nearest locations to be included}

\item{format}{A single integer, indicating format of the output. Can be either a "list" or a "tibble".}
}
\value{
A list, containing either one of both outputs, depending on whether both dist and count parameters were entered.
For each type of proximity a list is returned, where each element is named with the id of target location and contains a vector with ids of selected locations, arranged from nearest yto farthest
}
\description{
Select nearest locations from a distance matrix
This function takes as input a distance matrix and returns list of either the nearest n locations, or locations within a given distance.
}
\examples{
data_addresses <- msmt_addresses(NUTS3 = "CZ010")
data_addresses_wcoord <- msmt_coordinates(data_addresses)
data_addresses_wcoord <- na.omit(data_addresses_wcoord[,c("red_izo", "RedRUAINKod_geometry")])
id <- data_addresses_wcoord$red_izo
X <- unlist(data_addresses_wcoord$RedRUAINKod_geometry)[c(TRUE,FALSE)]
Y <- unlist(data_addresses_wcoord$RedRUAINKod_geometry)[c(FALSE,TRUE)]
dmat <- msmt_distances(id = id, X = X, Y = Y)
nearest_5 <- msmt_nearest(dmat, count = 5)

}
